{"version":3,"file":"component---src-pages-projects-jsx-ece703f81e326a976db6.js","mappings":"+QAIA,MAAMA,EAAuB,cAE7B,EACEC,WACAC,YACAC,UACAC,GAAIC,EAAY,SACbC,GACFC,KACD,MAAMC,GAAS,QAAmBP,EAAU,YAC5C,OAAoB,SAAKI,EAAW,CAClCE,IAAKA,EACLL,UAAW,IAAWC,EAAU,GAAGK,KAAUL,IAAYK,EAAQN,MAC9DI,GACH,IAEJN,EAAQS,YAAc,UACtB,Q,UCfA,MAAMC,EAA0B,cAAiB,EAC/CT,WACAC,YAEAE,GAAIC,EAAY,SACbC,GACFC,KACD,MAAMC,GAAS,QAAmBP,EAAU,eACtCU,GAAe,IAAAC,UAAQ,KAAM,CACjCC,mBAAoBL,KAClB,CAACA,IACL,OAAoB,SAAKM,EAAA,WAA4B,CACnDC,MAAOJ,EACPK,UAAuB,SAAKX,EAAW,CACrCE,IAAKA,KACFD,EACHJ,UAAW,IAAWA,EAAWM,MAEnC,IAEJE,EAAWD,YAAc,aACzB,QCnBA,MAAMQ,GAAgB,EAAAC,EAAA,GAAiB,MACjCC,GAAgB,EAAAD,EAAA,GAAiB,MACjCE,GAAW,EAAAC,EAAA,GAAmB,aAC9BC,GAAY,EAAAD,EAAA,GAAmB,aAAc,CACjDhB,UAAWY,IAEPM,GAAe,EAAAF,EAAA,GAAmB,gBAAiB,CACvDhB,UAAWc,IAEPK,GAAW,EAAAH,EAAA,GAAmB,YAAa,CAC/ChB,UAAW,MAEPoB,GAAW,EAAAJ,EAAA,GAAmB,YAAa,CAC/ChB,UAAW,MAEPqB,GAAa,EAAAL,EAAA,GAAmB,eAChCM,GAAiB,EAAAN,EAAA,GAAmB,oBAIpCO,EAAoB,cAAiB,EACzC3B,WACAC,YACA2B,KACAC,OACAC,SACAC,OACAhB,WAEAZ,GAAIC,EAAY,SACbC,GACFC,KACD,MAAMC,GAAS,QAAmBP,EAAU,QAC5C,OAAoB,SAAKI,EAAW,CAClCE,IAAKA,KACFD,EACHJ,UAAW,IAAWA,EAAWM,EAAQqB,GAAM,MAAMA,IAAMC,GAAQ,QAAQA,IAAQC,GAAU,UAAUA,KACvGf,SAAUgB,GAAoB,SAAKZ,EAAU,CAC3CJ,SAAUA,IACPA,GACL,IAEJY,EAAKnB,YAAc,OACnBmB,EAAKK,aA1BgB,CACnBD,MAAM,GA0BR,MAAeE,OAAOC,OAAOP,EAAM,CACjCQ,IAAK,EACLC,MAAOf,EACPgB,SAAUf,EACVgB,KAAMnB,EACNoB,KAAMhB,EACNiB,KAAMhB,EACNiB,OAAQ,EACRC,OAAQjB,EACRkB,WAAYjB,ICvDd,SAASkB,EAAY,GAAwB,IAAxB,KAAEC,EAAI,YAAEC,GAAa,EACpCC,EAAkB,iCAatB,OAXID,EAAYE,gBAAkBF,EAAYG,QAC5CF,EACE,gBAAC,OAAS,CAACG,KAAMJ,EAAYG,SAC3B,gBAAC,MAAQ,CAACE,IAAG,oBAAsBL,EAAYE,kBAG5CF,EAAYE,iBACnBD,EACE,gBAAC,MAAQ,CAACI,IAAG,oBAAsBL,EAAYE,kBAIjD,gBAAC,EAAI,KACFD,EACD,gBAAC,OAAS,KACR,gBAAC,QAAU,KAAED,EAAYM,OACzB,gBAAC,OAAS,CACRjD,GAAG,MACHkD,wBAAyB,CAAEC,OAAQT,MAK7C,CAEe,SAASU,EAAS,GAAW,IAAX,KAAEC,GAAM,EAGvC,OAFAC,QAAQC,IAAIF,GAGV,gBAACG,EAAA,EAAM,KAEL,gBAACC,EAAA,EAAS,CACRC,MAAO,CACLC,QAAS,OACTC,IAAK,OACLC,oBAAqB,yCAGtBR,EAAKS,kBAAkBC,MAAMC,KAAKC,GACjC,gCACE,gBAACxB,EAAW,CACVC,KAAMuB,EAAKvB,KACXC,YAAasB,EAAKtB,YAClBuB,IAAKD,EAAKC,UAOxB,C","sources":["webpack://Lowell Jacobs Portfolio/./node_modules/react-bootstrap/esm/CardImg.js","webpack://Lowell Jacobs Portfolio/./node_modules/react-bootstrap/esm/CardHeader.js","webpack://Lowell Jacobs Portfolio/./node_modules/react-bootstrap/esm/Card.js","webpack://Lowell Jacobs Portfolio/./src/pages/projects.jsx"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\n\nfunction ProjectCard({ html, frontmatter }) {\n  let screenshotImage = <></>;\n\n  if (frontmatter.screenshotName && frontmatter.siteURL)\n    screenshotImage = (\n      <Card.Link href={frontmatter.siteURL}>\n        <Card.Img src={`/images/projects/${frontmatter.screenshotName}`} />\n      </Card.Link>\n    );\n  else if (frontmatter.screenshotName)\n    screenshotImage = (\n      <Card.Img src={`/images/projects/${frontmatter.screenshotName}`} />\n    );\n\n  return (\n    <Card>\n      {screenshotImage}\n      <Card.Body>\n        <Card.Title>{frontmatter.title}</Card.Title>\n        <Card.Text\n          as=\"div\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        ></Card.Text>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default function Projects({ data }) {\n  console.log(data);\n\n  return (\n    <Layout>\n      {/* <Container className=\"d-flex flex-wrap justify-content-center\"> */}\n      <Container\n        style={{\n          display: \"grid\",\n          gap: \"1rem\",\n          gridTemplateColumns: \"repeat(auto-fit, minmax(20rem, 1fr))\",\n        }}\n      >\n        {data.allMarkdownRemark.nodes.map((node) => (\n          <>\n            <ProjectCard\n              html={node.html}\n              frontmatter={node.frontmatter}\n              key={node.key}\n            />\n          </>\n        ))}\n      </Container>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`{\n  allMarkdownRemark(filter: {fileAbsolutePath: {regex: \"/.*/projects/.*\\\\.md/\"}}) {\n    nodes {\n      html\n      fileAbsolutePath\n      frontmatter {\n        title\n        screenshotName\n        siteURL\n      }\n    }\n  }\n}`;\n"],"names":["CardImg","bsPrefix","className","variant","as","Component","props","ref","prefix","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","ProjectCard","html","frontmatter","screenshotImage","screenshotName","siteURL","href","src","title","dangerouslySetInnerHTML","__html","Projects","data","console","log","Layout","Container","style","display","gap","gridTemplateColumns","allMarkdownRemark","nodes","map","node","key"],"sourceRoot":""}